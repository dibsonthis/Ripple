const lib = load_lib("./bin/requests")
const json_lib = load_lib("../json/bin/json")
const str_lib = load_lib("../string/bin/string")

const _split = (str: String, delim: String) => str_lib.call("split", [str, delim])

type Response {
	version: String = "",
	status: Number = 0,
	body: String = "",
	location: String = "",
	headers: [String] = [],
	toJson: Function = () => json_lib.call("parse", [this.body])
}

const get = (url: String, endpoint: String): Response => { 
	const obj = lib.call("get", [url, endpoint])
	const res = Response {
		version: obj.version,
		status: obj.status,
		body: obj.body,
		location: obj.location,
		headers: obj.headers
	}
	ret res
}

const get = (url: String): Response => {
	const split = _split(url, "/")
	if (split.length == 4) {
		ret get(split[0] + "//" + split[1] + split[2], "/" + split[3])
	}
	ret Response {}
}

const post = (url: String, endpoint: String, payload: Object): Response => { 
	const obj = lib.call("post", [url, endpoint, payload])
	const res = Response {
		version: obj.version,
		status: obj.status,
		body: obj.body,
		location: obj.location,
		headers: obj.headers
	}
	ret res
}

const post = (url: String, endpoint: String): Response => { 
	ret post(url, endpoint, {})
}

const post = (url: String): Response => { 
	ret post(url, "/", {})
}