// import [PI, e] : "../imports/math";

// var lexer = {
// 	index: -1,
// 	tokens: ["const", "x", "=", 9, 10, "5", [1, 2, 3]],
// 	currentNode: this.tokens[0]
// }

// lexer.index::onChange = (curr) => {
// 	lexer.currentNode = lexer.tokens[curr]
// }

// lexer.currentNode::onChange = (curr) => {
// 	if (curr != string(curr)) {
// 		println("[Removing non-string token: " + string(curr) + "]")
// 		lexer.tokens.remove_at(lexer.index)
// 		lexer.index -= 1
// 	}
// }

// println(lexer)

// for (0..(lexer.tokens.length)) {
// 	lexer.index += 1
// }

// println(lexer)

var length, area, diff = 0

length::onChange = () => {
	area = length ^ 2
}

area::onChange = (curr, old) => {
	diff = curr - old
}

for (1..10) {
	length = length + 1
	print("L: " + string(length) + 
		  "\tA: " + string(area) + 
		  "\tD: " + string(diff) + "\n")
}