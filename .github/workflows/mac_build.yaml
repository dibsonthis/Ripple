name: Mac Build

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag'
        default: '1.0'
        required: true
        type: string

jobs:
  compile:
    runs-on: macos-13

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Compile Interpreter
      run: scripts/mac/compile_interpreter.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: interpreter
        path: bin/build/interp/mac/vortex

    - name: Download SDL stuff
      run: | 
        cd ${{ github.workspace }}
        # Install necessary dependencies
        brew install cmake

        # Clone the SDL2 repository
        git clone https://github.com/libsdl-org/SDL.git
        cd SDL

        # Create a build directory
        mkdir build
        cd build

        # Configure the build for both Intel and ARM
        cmake -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" ..

        # Build and install SDL2
        make
        sudo make install

        cd ${{ github.workspace }}

        # Clone the SDL2_image repository
        git clone https://github.com/libsdl-org/SDL_image.git
        cd SDL_image

        # Create a build directory
        mkdir build
        cd build

        # Configure the build for both Intel and ARM, linking to the previously installed SDL2
        cmake -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DSDL2_CONFIG_EXECUTABLE=/usr/local/bin/sdl2-config ..

        # Build and install SDL2_image
        make
        sudo make install

        cd ${{ github.workspace }}

        # Clone the SDL2_mixer repository
        git clone https://github.com/libsdl-org/SDL_mixer.git
        cd SDL_mixer

        # Create a build directory
        mkdir build
        cd build

        # Configure the build for both Intel and ARM, linking to the previously installed SDL2
        cmake -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DSDL2_CONFIG_EXECUTABLE=/usr/local/bin/sdl2-config ..

        # Build and install SDL2_mixer
        make
        sudo make install

        cd ${{ github.workspace }}

        # Clone the SDL2_ttf repository
        git clone https://github.com/libsdl-org/SDL_ttf.git
        cd SDL_ttf

        # Create a build directory
        mkdir build
        cd build

        # Configure the build for both Intel and ARM, linking to the previously installed SDL2 and SDL2_ttf
        cmake -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DSDL2_CONFIG_EXECUTABLE=/usr/local/bin/sdl2-config -DSDL2_TTF_CONFIG_EXECUTABLE=/usr/local/bin/sdl2-config ..

        # Build and install SDL2_ttf
        make
        sudo make install

        cd ${{ github.workspace }}

        rm -r Modules/modules/sdl/lib/*

        cp /usr/local/sdl2/*/lib/*.dylib Modules/modules/sdl/lib
        cp /usr/local/sdl2/*/lib/*.a Modules/modules/sdl/lib

        cp /usr/local/sdl2_image/*/lib/*.dylib Modules/modules/sdl/lib
        cp /usr/local/sdl2_image/*/lib/*.a Modules/modules/sdl/lib

        cp /usr/local/sdl2_ttf/*/lib/*.dylib Modules/modules/sdl/lib
        cp /usr/local/sdl2_ttf/*/lib/*.a Modules/modules/sdl/lib

        cp /usr/local/sdl2_mixer/*/lib/*.dylib Modules/modules/sdl/lib
        cp /usr/local/sdl2_mixer/*/lib/*.a Modules/modules/sdl/lib

    # - name: Download SDL stuff
    #   run: | 
    #     brew install sdl2;
    #     brew install sdl2_image;
    #     brew install sdl2_ttf;
    #     brew install sdl2_mixer;

    #     rm -r Modules/modules/sdl/lib/*

    #     cp /usr/local/Cellar/sdl2/*/lib/*.dylib Modules/modules/sdl/lib
    #     cp /usr/local/Cellar/sdl2/*/lib/*.a Modules/modules/sdl/lib

    #     cp /usr/local/Cellar/sdl2_image/*/lib/*.dylib Modules/modules/sdl/lib
    #     cp /usr/local/Cellar/sdl2_image/*/lib/*.a Modules/modules/sdl/lib

    #     cp /usr/local/Cellar/sdl2_ttf/*/lib/*.dylib Modules/modules/sdl/lib
    #     cp /usr/local/Cellar/sdl2_ttf/*/lib/*.a Modules/modules/sdl/lib

    #     cp /usr/local/Cellar/sdl2_mixer/*/lib/*.dylib Modules/modules/sdl/lib
    #     cp /usr/local/Cellar/sdl2_mixer/*/lib/*.a Modules/modules/sdl/lib

    - name: Compile Modules
      run: scripts/mac/compile_modules.sh

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: modules
        path: bin/build/modules/mac/**/*

    - name: Create dist folder
      run: |
        mkdir -p dist
        cp bin/build/interp/mac/vortex dist
        for module in bin/build/modules/mac/*; 
        do
        m=$(basename $module)
        pushd bin/build/modules/mac
        zip -r -y ${m}.zip ${m};
        popd
        mv bin/build/modules/mac/${m}.zip dist
        done

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ inputs.tag }} dist/* \
            --repo="$GITHUB_REPOSITORY" \
            --title="Vortex-Mac-${{ inputs.tag }}" \
            --generate-notes \
            --latest