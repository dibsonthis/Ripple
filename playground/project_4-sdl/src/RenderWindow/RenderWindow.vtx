import sdl : sdl
import [Color] : sdl
import [] : "../Common/Types"
import [] : "../Entity/Entity"

type RenderWindow = {
    window: Pointer,
    renderer: Pointer,
    clear: Function = () => {
        sdl.renderClear(this.renderer)
    },
    setColor: Function = (color: Color) => {
        sdl.setRenderDrawColor(this.renderer, color)
    },
    render: Function = (entity: Entity, angle: Number = 0) => println(entity),
    // render: Function 
    //     = (entity: Entity, 
    //         angle: Number = 0, 
    //         flip: Number = 0)
    // => {
    //     sdl.renderCopyEx(this.renderer, entity.texture, entity.srcRect.x, entity.srcRect.y, entity.srcRect.w, entity.srcRect.h, entity.destRect.x, entity.destRect.y, entity.destRect.w, entity.destRect.h, angle, entity.center.x, entity.center.y, flip)
    // },
    display: Function = () => {
        sdl.renderPresent(this.renderer)
    },
    clear: Function = () => {
        sdl.renderClear(this.renderer)
    },
    cleanUp: Function = () => {
        sdl.destroyRenderer(this.renderer)
        sdl.destroyWindow(this.window)
        sdl.quitSDL()
    },
    loadTexture: Function = (filePath: String) => {
        sdl.loadTexture(this.renderer, filePath)
    }
}