// type Nullable(T) {
// 	union _ {
// 		T,
// 		None
// 	}
// }

// const p: Nullable(Boolean) = 10

// type LastOf(T) {
//     (x: [T]) => x[x.length-1]
// }

// print("hi")

// const last = LastOf(String);
// const last = LastOf(Number);
// const last = LastOf(Boolean);

// const p: Nullable(Boolean) = [true, false].last()
// print(p)

const f = () => {
	if (true) {
		ret 10
	} else {
		ret "hi"
	}
}

const obj = {
	x: f()
}

if (obj.x is String) {
	print(obj.x + "bye")
}

if (obj.x is Number) {
	print(obj.x + 10)
}