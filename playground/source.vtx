import requests : "/Users/adib/Dev/Personal/Vortex/Modules/modules/requests/requests"
import [ContentType] : requests
import json
import io
import string

const host = "localhost"
const port = 1234

println(f"Server running on ${host}:${port}")

const server = requests.server()

const loadTemplate = (filePath: String) => {
	var template = io.readf(filePath)
	template = "f\"" + template.replaceAll("\"", "\\\"") + "\""

	var t_chars = template.chars()
	var to_remove = []
	var num = 0
	var in_code_block = false

	for (t_chars, i, c) {
		if ((c == "$") && (template[i+1] == "{")) {
			in_code_block = true
		} else if (in_code_block && (c == "{")) {
			num += 1
			in_code_block = (num != 0)
		} else if (in_code_block && (c == "}")) {
			num -= 1
			in_code_block = (num != 0)
		}

		if (in_code_block && (c == "\\")) {
			to_remove.prepend(i)
		}
	}

	for (to_remove, i, v) {
		t_chars.remove_at(v)
	}

	template = t_chars.reduce((a, b) => a + b)
}

const renderTemplate = (template: String) => {
	var rendered = eval(template)
}

var template = loadTemplate("data/template4.html")

const mapAndReduce = (data, func) => {
	data.names.map((elem) => func(elem)).reduce((a, b) => a + b)
}

server.get("/register", () => {
	const data = {
		app_name: "Company Co."
	}
	renderTemplate(template)
}, ContentType.html)

server.get("/account", (req) => {
	print(req.url_params)
}, ContentType.html)

server.start(host, port)