type Maybe(T) {
    union _ {
        T,
        None
    }
}

type LastOf(T) {
    const lastOf = (x: [T]) => x[x.length-1]
}

type NonNullable(T) {
    ret T - None
}

const last = LastOf(String)
const last = LastOf(Number)

const x: Maybe(Number) = [1, 2, 3].last()

const p: NonNullable(Maybe(Boolean)) = true