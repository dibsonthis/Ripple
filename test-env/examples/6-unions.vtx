const Maybe = (T) => {
    union MaybeT {
        T,
        None
    }
}

const Vec2 = (T) => {
    type VecT {
        x: T,
        y: T
    }
}

const Vec2n = Vec2(Number)

extend Vec2n {
    add: (other: Vec2n): Vec2n => Vec2n {x: self.x + other.x, y: self.y + other.y},
    print: () => println(self)
}

var z1: Vec2n = Vec2n {x: 10, y: 10}
var z2: Vec2n = Vec2n {x: 20, y: 20}
var z3: Vec2n = z1.add(z2).add(z2).add(Vec2n {x: 100, y: 100})
z3.print()
