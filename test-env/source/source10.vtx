const new_matrix = (w: Number, h: Number): [[Number]] => {
    var matrix = []
    var row = []

    for (0..w, x) {
        row.append(0)
    }

    for (0..h, y) {
        var _row = row
        matrix.append(_row)
    }

    matrix
}

const copy_matrix = (matrix: [[Number]]): [[Number]] => {
    const w = matrix[0].length
    const h = matrix.length
    var copy = new_matrix(w, h)
    for (0..h, y) {
        for (0..w, x) {
            copy[y][x] = matrix[y][x]
        }
    }
    ret copy
}

var m1 = [  [12, 7, 3],
            [4, 5, 6],
            [7, 8, 9]]


var m2 = [  [5, 8, 1, 2],
            [6, 7, 3, 0],
            [4, 5, 9, 1]]


const mmul = (a: Number, b: [[Number]]) => {
    if (b.empty) {
        ret b
    }
    var matrix = copy_matrix(b)
    for (0..matrix.length, y) {
        for (0..matrix[0].length, x) {
            matrix[y][x] = matrix[y][x] * a
        }
    }
    ret matrix
}

const mmul = (a: [[Number]], b: Number) => {
    mmul(b, a)
}

const mmul = (a: [[Number]], b: [[Number]]) => {
    var h = a.length
    if (b.empty) {
        ret a
    }
    var w = b[0].length

    var matrix = new_matrix(w, h)

    for (0..a.length, i) {
        for (0..b[0].length, j) {
            for (0..b.length, k) {
                matrix[i][j] += a[i][k] * b[k][j]
            }
        }
    }
    ret matrix
}

println(m1, m2, "\n")

var res1 = mmul(m1, 2)
var res2 = mmul(10, m2)
var res3 = mmul(m1, m2)
println(res1, res2, res3)