import image

var interpolate = (value: Number, x0: Number, x1: Number, y0: Number, y1: Number): Number => {
	y0 + (value - x0) * ((y0 - y1)/(x0 - x1))
}

var width = 600
var x = -0.65
var y = 0
var oldX = x
var oldY = y
var xRange = 3.4
var aspectRatio = 4/3
var precision = 20

var height = width / aspectRatio
var yRange = xRange / aspectRatio
var minX = x - xRange / 2
var maxX = x + xRange / 2
var minY = y - yRange / 2
var maxY = y + yRange / 2

var canvas = image.create(width, height)

var grid = []
var row = []
var prec = []

for (0..width) {
    row.append(0)
}

for (0..height) {
    grid.append(row)
}

for (0..precision + 1) {
    prec.append(0)
}

grid.map((_row, row) => {
    _row.map((_col, col) => {
        x = minX + col * xRange / width
        y = maxY - row * yRange / height
        oldX = x
        oldY = y

        var index = 0

        for (0..precision + 1) {
            const a = x^2 - y^2
            const b = 2 * x * y
            x = a + oldX
            y = b + oldY
            if ((x^2 + y^2) > 4) {
                break
            }
            index += 1
        }

        if (index < precision) {
            const distance = (index + 1) / (precision + 1)
            const interpol = interpolate(index, 0, distance, 255, 0)
            image.blit(canvas, col, row, {r: index, g: interpol, b: distance})
        }

        index = row * width + col + 1

        println(f"${index}/${width * height} - ${(index / width / height * 100 * 10) / 10}%")
    })
})

image.save(canvas, "../output/mandelbrot_output.png")
