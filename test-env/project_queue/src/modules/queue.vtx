const Queue = (T) => {
	type Queue_T {
		elements: [T] = [],
		pop = (): T => {
			const first = this.elements[0]
			this.elements.remove_at(0)
			first
		},
		add = (x: T) => {
			this.elements.append(x)
			this
		},
		peek = (): union _ {T, None} => {
			const first = this.elements[0]
			ret first
		},
		end = (): union _ {T, None} => {
			const last = this.elements[this.elements.length-1]
			ret last
		},
		empty = (): Boolean => this.elements.empty,
		raw = (): [T] => this.elements,
		size = (): Number => this.elements.length,
		clear = () => {
			while (!this.empty()) {
				this.pop()
			}
		}
	}
}